{
    "name": "hono-kafka-{{ .Values.connections.ditto.source.hono.tenantName }}-source-connection",
    "connectionType": "kafka",
    "connectionStatus": "open",
    "failoverEnabled": true,
    {{- if .Values.hono.kafkaMessagingClusterExample.enabled }}
    "uri": "ssl://{{ .Values.connections.ditto.source.hono.username }}:{{ .Values.connections.ditto.source.hono.password }}@{{ .Release.Name }}-kafka:9092",
    {{- else }}
    {{ $kafka := .Values.hono.adapters.kafkaMessagingSpec.commonClientConfig }}
    {{ $kafkaServers := splitList "," (index $kafka "bootstrap.servers") }}
    "uri": "tcp://{{ .Values.connections.ditto.source.hono.username }}:{{ .Values.connections.ditto.source.hono.password }}@{{ first $kafkaServers }}",
    {{- end }},
    "specificConfig": {
        {{- if .Values.hono.kafkaMessagingClusterExample.enabled }}
        "saslMechanism": "plain",
        "bootstrapServers": "{{ .Release.Name }}-kafka:9092",
        {{- else }}
        {{ $kafka := .Values.hono.adapters.kafkaMessagingSpec.commonClientConfig }}
        "saslMechanism": "{{ (or (index $kafka "sasl.mechanism") "PLAIN") | lower }}",
        "bootstrapServers": "{{ index $kafka "bootstrap.servers" }}",
        {{- end }}
        "groupId": {{ printf "%s_{{ connection:id }}" .Values.connections.ditto.source.hono.tenantName | quote }}
    },
    "sources": [
        {
            "addresses": [
                "hono.telemetry.{{ .Values.connections.ditto.source.hono.tenantName }}"
            ],
            "consumerCount": 1,
            "qos": 0,
            "authorizationContext": [
                "pre-authenticated:hono-connection-{{ .Values.connections.ditto.source.hono.tenantName }}"
            ],
            "enforcement": {
                "input": {{ "{{ header:device_id }}" | quote }},
                "filters": [
                    {{ "{{ entity:id }}" | quote }}
                ]
            },
            "headerMapping": {
                "hono-device-id": {{ "{{ header:device_id }}" | quote }},
                "content-type": {{ "{{ header:content-type }}" | quote }}
            }
        }
    ]
}